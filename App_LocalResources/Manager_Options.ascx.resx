<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Header_Title.Text" xml:space="preserve">
    <value>General Settings</value>
  </data>
  <data name="lblArticleCheck.Help" xml:space="preserve">
    <value>It needs the administrator to review new article posts.</value>
  </data>
  <data name="lblArticleCheck.Text" xml:space="preserve">
    <value>Review new article</value>
  </data>
  <data name="lblAuthorRoles.Text" xml:space="preserve">
    <value>Author Roles</value>
  </data>
  <data name="lblAvatarRating.Help" xml:space="preserve">
    <value>Avatar Maximum Rating</value>
  </data>
  <data name="lblAvatarRating.Text" xml:space="preserve">
    <value>Avatar Maximum Rating</value>
  </data>
  <data name="lblAvatarSize.Help" xml:space="preserve">
    <value>px</value>
  </data>
  <data name="lblAvatarSize.Text" xml:space="preserve">
    <value>Avatar Size</value>
  </data>
  <data name="lblAvatarsSetting.Text" xml:space="preserve">
    <value>An avatar is an image that follows you from weblog to weblog appearing beside your name when you comment on avatar enabled sites. Here you can enable the display of avatars for people who comment on your site.</value>
  </data>
  <data name="lblBaseSetting.Text" xml:space="preserve">
    <value>Base Settings</value>
  </data>
  <data name="lblDefaultAvatar.Help" xml:space="preserve">
    <value>For users without a custom avatar of their own, you can either display a generic logo or a generated one based on their e-mail address.</value>
  </data>
  <data name="lblDefaultAvatar.Text" xml:space="preserve">
    <value>Default Avatar</value>
  </data>
  <data name="lblDisplayAuthor.Text" xml:space="preserve">
    <value>Display Author</value>
  </data>
  <data name="lblFeedExcerpt.Text" xml:space="preserve">
    <value>Display each article in a feed on</value>
  </data>
  <data name="lblFeedSize.Help" xml:space="preserve">
    <value>items</value>
  </data>
  <data name="lblFeedSize.Text" xml:space="preserve">
    <value>Synidication feeds display the latest</value>
  </data>
  <data name="lblManagerModule.Help" xml:space="preserve">
    <value />
  </data>
  <data name="lblManagerModule.Text" xml:space="preserve">
    <value>Management Module Roles</value>
  </data>
  <data name="lblMetaWeblog.Help" xml:space="preserve">
    <value />
  </data>
  <data name="lblMetaWeblog.Text" xml:space="preserve">
    <value>Enable MetaWeblog</value>
  </data>
  <data name="lblModuleTitle.Text" xml:space="preserve">
    <value>Module Settings</value>
  </data>
  <data name="lblPageSize.Help" xml:space="preserve">
    <value>Articles per page</value>
  </data>
  <data name="lblPageSize.Text" xml:space="preserve">
    <value>Articles per page</value>
  </data>
  <data name="lblPingService.Help" xml:space="preserve">
    <value>When you publish a new post, ThemePlugin automatically notifies the following site update services. For more about this, see &lt;a target='_blank' href='http://codex.wordpress.org/Update_Services'&gt;Update Services&lt;/a&gt; on the Codex. Separate multiple service &lt;abbr title='Universal Resource Locator'&gt;URL&lt;/abbr&gt;s with line breaks.</value>
  </data>
  <data name="lblPingService.Text" xml:space="preserve">
    <value>Ping Service</value>
  </data>
  <data name="lblSitemapChangefreq.Text" xml:space="preserve">
    <value>Sitemap Changefreq</value>
  </data>
  <data name="lblSitemapPriority.Text" xml:space="preserve">
    <value>Sitemap Priority</value>
  </data>
  <data name="lblSitemapSettings.Text" xml:space="preserve">
    <value>Sitemap Settings</value>
  </data>
  <data name="lblSitemapSize.Help" xml:space="preserve">
    <value>Site Map URL</value>
  </data>
  <data name="lblSitemapSize.Text" xml:space="preserve">
    <value>Synidication sitemap display the latest</value>
  </data>
  <data name="lblSitemapUrl.Text" xml:space="preserve">
    <value>SiteMap Url</value>
  </data>
  <data name="Title_AuthorSettings.Text" xml:space="preserve">
    <value>Author Settings</value>
  </data>
  <data name="Title_AvatarsSettings.Text" xml:space="preserve">
    <value>Avatars Settings</value>
  </data>
  <data name="Title_SitemapSettings.Text" xml:space="preserve">
    <value>Sitemap Settings</value>
  </data>
  <data name="lblSearchable.Text" xml:space="preserve">
    <value>Searchable</value>
  </data>
  <data name="lblSearchableCount.Text" xml:space="preserve">
    <value>Searchable Count</value>
  </data>
</root>